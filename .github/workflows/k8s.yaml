name: K8s AWS Stage Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Stage Environment deploy'
        default: 'stage'
        required: true

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: dev

      # render variables that exist on the secrets of the repository
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      #Login on ecr
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      #Building and pushing images
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: frontend
          IMAGE_TAG: d8x-frontend-stage-${{ github.sha }}
          VITE_ENABLED_CHAINS: 1442
          VITE_HTTP_RPC: 80001::${{ secrets.HTTP_RPC_MUMBAI }}
          VITE_PRICE_FEEDS:
          VITE_PROJECT_ID: ${{ secrets.WALLET_CONNECT_PROJECT_ID }}
          VITE_GEONAMES_USERNAME: ${{ secrets.GEONAMES_USERNAME }}
          VITE_API_URL: default::https://api.zktest.quantena.tech;80001::https://api.app.quantena.tech;1442::https://api.zkdev6.d8x.xyz
          VITE_HISTORY_URL: default::https://history.zktest.quantena.tech;80001::https://history.api.quantena.tech;1442::https://history.zkdev6.d8x.xyz
          VITE_REFERRAL_URL: default::https://referral.zktest.quantena.tech;80001::https://referral.app.quantena.tech;1442::https://referral.zkdev6.d8x.xyz
          VITE_WEBSOCKET_URL: default::wss://ws.zktest.quantena.tech/;80001::wss://ws.app.quantena.tech/;1442::wss://ws.zkdev6.d8x.xyz/
          VITE_CANDLES_WEBSOCKET_URL: default::wss://candles.zktest.quantena.tech;1442::wss://candles.zkdev6.d8x.xyz
          VITE_WELCOME_MODAL: true
        run: |
          docker build -f Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --build-arg VITE_ENABLED_CHAINS=$VITE_ENABLED_CHAINS --build-arg VITE_PROJECT_ID=$VITE_PROJECT_ID --build-arg VITE_GEONAMES_USERNAME=$VITE_GEONAMES_USERNAME --build-arg VITE_HTTP_RPC=$VITE_HTTP_RPC --build-arg VITE_PRICE_FEEDS=$VITE_PRICE_FEEDS --build-arg VITE_API_URL=$VITE_API_URL --build-arg VITE_HISTORY_URL=$VITE_HISTORY_URL --build-arg VITE_REFERRAL_URL=$VITE_REFERRAL_URL --build-arg VITE_CANDLES_WEBSOCKET_URL=$VITE_CANDLES_WEBSOCKET_URL --build-arg VITE_WEBSOCKET_URL=$VITE_WEBSOCKET_URL --build-arg VITE_WELCOME_MODAL=$VITE_WELCOME_MODAL .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    needs: build
    name: Deploy app to Kubernetes
    runs-on: ubuntu-latest
    steps:
      - name: checkout and pull tag version
        uses: actions/checkout@v4
        with:
          ref: dev
      #does not yet work here
      - id: get-tag-version
        run: |
          git fetch --prune --unshallow
          echo "TAG_VERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      #Checkout DevOps repo with PAT_TOKEN token that expires on 90days
      - name: Checkout DevOpsArgoCD
        uses: actions/checkout@v3
        with:
          repository: D8-X/devops
          token: ${{ secrets.PAT_TOKEN }}
      #Substitute the values on the service app
      - name: Render Deployment YAML
        uses: nowactions/envsubst@v1
        with:
          input: ./charts/frontend/d8x-frontend/versions.tpl
          output: ./charts/frontend/d8x-frontend/versions-stage.yaml
        env:
          IMAGE_VERSION: d8x-frontend-stage-${{ github.sha }}
          RELEASE_VERSION: ${{ env.TAG_VERSION }}

      - name: Push
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Image version stage ${{ github.sha }}"
          git push
